}
for x in 500:0 {
answer = x - 20
print(answer)
}
for (x in 0:500) {
answer = x - 20
print(answer)
}
for (x in 0:10) {
answer = x - 20
print(answer)
}
answer = value - 20
for (value in 0:500) {
answer = value - 20
print(answer)
}
x = 500
while (x > 0) {
print(x)
x = x - 20
}
for (value in 0:500) {
x = x - 20
print(x)
}
## Excersise
x = 500
for (value in 0:500) {
x = x - 20
print(x)
}
for (x in 0:500) {
x = x - 20
print(x)
}
answer = x - 20
for (x in 0:500) {
answer = x - 20
print(answer)
}
## Excersise
x = 500
for (x in 0:500) {
answer = x - 20
print(answer)
}
print(x)
for (x in >-1 {
for (x in 0:500 {
for (x in 0:500) {
x = x - 20
print(x)
}
for (x in 0:500) {
print(x)
x = x - 20
}
for (value in 0:500) {
x = x - 20
print(x)
}
print(y)
for (x in 0:500) {
y = x - 20
print(y)
}
mi_familia = c(Mum, Dad, Tappy)
mi_familia = c("Mum", "Dad", "Tappy")
age = c("60", "65", "19")
#2
?touper
?toupper
?cat
cat(mi_familia, "his", age)
cat(mi_familia, "is", age, "years old")
blockWord = toupper(mi_familia)
cat(mi_familia, "is", age, "years old")
for (thisWord in mi_familia) {
age = age
blockWord = toupper(mi_familia)
cat(mi_familia, "is", age, "years old")
}
blockWord = toupper(thisWord)
for (thisWord in mi_familia) {
age = age
blockWord = toupper(thisWord)
cat(mi_familia, "is", age, "years old")
}
age = sum(thisWord)
for (thisWord in mi_familia) {
age = sum(thisWord)
blockWord = toupper(thisWord)
cat(mi_familia, "is", age, "years old")
}
for (thisWord in mi_familia) {
age = value(thisWord)
blockWord = toupper(thisWord)
cat(mi_familia, "is", age, "years old")
}
for (thisWord in mi_familia) {
age_print = print(thisWord)
blockWord = toupper(thisWord)
cat(mi_familia, "is", age, "years old")
}
age = c(60, 65, 19)
for (thisWord in mi_familia) {
age_print = (thisWord)
blockWord = toupper(thisWord)
cat(mi_familia, "is", age, "years old")
}
age_print = sum(thisWord)
age = c(60, 65, 19)
for (thisWord in mi_familia) {
blockWord = toupper(thisWord)
cat(mi_familia, "is", age, "years old")
}
family = cbind(mi_familia, age)
family = cbind(mi_familia, age)
View(family)
for (thisWord in family) {
cat(mi_familia, "is", age, "years old")
}
for (thisWord in mi_familia) {
cat(mi_familia, "is", age, "years old")
}
blockWord <- toupper(thisWord)
for (thisWord in words) {
nLetters <- nchar(thisWord)
blockWord <- toupper(thisWord)
cat(blockWord,"has",nLetters,"letters\n")
}
age_ = value(age)
age_ = sum(age)
blockWord = toupper(thisWord)
for (thisWord in mi_familia) {
blockWord = toupper(thisWord)
cat(mi_familia, "is", age, "years old")
}
for (thisWord in mi_familia) {
cat(mi_familia, "is", age, "years old")
}
for (thisWord in family) {
cat(mi_familia, "is", age, "years old")
}
for (thisWord in mi_familia) {
print(mi_familia, "is", age, "years old")
}
?toupper
for (x in 0:500) {
y = x - 20
print(y)
}
for (x in x > 0) {
y = x - 20
print(y)
}
#1
x = 500
for (x in x > 0) {
y = x - 20
print(y)
}
for (x in x 0 : 10) {
y = x - 2
print(y)
}
for (x in x 0:10) {
y = x - 2
print(y)
}
#1
x = 10
for (x in x 0:10) {
y = x - 2
print(y)
}
for (x in 0:10) {
y = x - 2
print(y)
}
#1
x = seq(500, 0, -20)
for (x in 0:500) {
y =  x - 20
print(y)
}
#1
x = seq(500, 0, -20)
for (x in 0:500) {
y =  x - 20
print(y)
}
for (x in seq(0, 500, 20)) {
y =  x - 20
print(y)
}
for (x in seq(20, 500, 20)) {
y =  x - 20
print(y)
}
for (value in seq(20, 500, 20)) {
y =  x - 20
print(y)
}
#1
x = 500
for (x in seq(20, 500, 20)) {
y =  x - 20
print(y)
}
for (x in seq(20, 520, 20)) {
y =  x - 20
print(y)
}
source('~/Dropbox/2021/Gaze Cueing/Recovery/06_runDiffModel_complex_recovery.R')
source('~/Dropbox/2021/Gaze Cueing/Recovery/06_runDiffModel_complex_recovery.R')
genParams
theta
theta
source('~/Dropbox/2021/Gaze Cueing/Recovery/06_runDiffModel_complex_recovery.R')
allGenParams=NULL
allMeanTheta=NULL
rm(list = ls())
allGenParams=NULL
allMeanTheta=NULL
load("~/Dropbox/2021/Gaze Cueing/Recovery/Fits_recovery/fits_recovery_P1.RData")
tmp = genParams
tmp
apply(theta,2,mean)
tmp = c(genParams[2,2], genParams[3,2], genParams[4,1], genParams[4,2], genParams[1,2])
View(genParams)
tmp
names(tmp) = c("a", "t0", "v.-0.5", "v.0.5", "z")
tmp
allGenParams=rbind(allGenParams,tmp)
allGenParams
allMeanTheta=rbind(,allMeanTheta,apply(theta,2,mean))
allMeanTheta=NULL
allMeanTheta=rbind(,allMeanTheta,apply(theta,2,mean))
allMeanTheta=rbind(allMeanTheta,apply(theta,2,mean))
allMeanTheta
rbind(allGenParams, allMeanTheta)
allGenParams = c(genParams[2,2], genParams[3,2], genParams[4,1], genParams[4,2], genParams[1,2])
names(allGenParams) = c("a", "t0", "v.-0.5", "v.0.5", "z")
rbind(allGenParams, allMeanTheta)
for (p in 1:n) {
load(paste(fits_recovery_P,"p",".RData", sep = ""))
tmp = c(genParams[2,2], genParams[3,2], genParams[4,1], genParams[4,2], genParams[1,2])
names(tmp) = c("a", "t0", "v.-0.5", "v.0.5", "z")
allGenParams=rbind(allGenParams,tmp)
allMeanTheta=rbind(allMeanTheta,apply(theta,2,mean))
}
allGenParams=NULL
allMeanTheta=NULL
n = 5
rm(list = ls())
allGenParams=NULL
allMeanTheta=NULL
n = 5
for (p in 1:n) {
load(paste(fits_recovery_P,"p",".RData", sep = ""))
tmp = c(genParams[2,2], genParams[3,2], genParams[4,1], genParams[4,2], genParams[1,2])
names(tmp) = c("a", "t0", "v.-0.5", "v.0.5", "z")
allGenParams=rbind(allGenParams,tmp)
allMeanTheta=rbind(allMeanTheta,apply(theta,2,mean))
}
setwd("~/Dropbox/2021/Gaze Cueing/Recovery")
setwd("~/Dropbox/2021/Gaze Cueing/Recovery")
for (p in 1:n) {
load(paste("Fits_recovery/fits_recovery_P",p,".RData", sep = ""))
tmp = c(genParams[2,2], genParams[3,2], genParams[4,1], genParams[4,2], genParams[1,2])
names(tmp) = c("a", "t0", "v.-0.5", "v.0.5", "z")
allGenParams=rbind(allGenParams,tmp)
allMeanTheta=rbind(allMeanTheta,apply(theta,2,mean))
}
View(allGenParams)
View(allMeanTheta)
n = 100
rm(list = ls())
setwd("~/Dropbox/2021/Gaze Cueing/Recovery")
allGenParams=NULL
allMeanTheta=NULL
n = 100
for (p in 1:n) {
load(paste("Fits_recovery/fits_recovery_P",p,".RData", sep = ""))
tmp = c(genParams[2,2], genParams[3,2], genParams[4,1], genParams[4,2], genParams[1,2])
names(tmp) = c("a", "t0", "v.-0.5", "v.0.5", "z")
allGenParams=rbind(allGenParams,tmp)
allMeanTheta=rbind(allMeanTheta,apply(theta,2,mean))
}
plot(allGenParams[,"z"],allMeanTheta[,"z"])
cor(allGenParams[,"z"],allMeanTheta[,"z"])
plot(allGenParams[,"v.-0.5"],allMeanTheta[,"v.-0.5"])
cor(allGenParams[,"v.-0.5"],allMeanTheta[,"v.-0.5"])
plot(allGenParams[,"v.0.5"],allMeanTheta[,"v.0.5"])
cor(allGenParams[,"v.0.5"],allMeanTheta[,"v.0.5"])
save(allGenParams, file = "All_Fits/Generated_Paramaters.RData")
save(allMeanTheta, file = "All_Fits/Estimated_Paramaters.RData")
View(allGenParams)
load("~/Dropbox/2021/Gaze Cueing/Recovery/All_Fits/Estimated_Paramaters.RData")
View(allMeanTheta)
plot()
?plot
cor_z = cor(allGenParams[,"z"],allMeanTheta[,"z"])
plot(allGenParams[,"z"],allMeanTheta[,"z"], sub = cor_z)
plot(allGenParams[,"z"],allMeanTheta[,"z"], sub = paste("r ="cor_z))
plot(allGenParams[,"z"],allMeanTheta[,"z"], sub = paste("r =",cor_z))
plot(allGenParams[,"z"],allMeanTheta[,"z"], main = paste("r =",cor_z))
plot(allGenParams[,"z"],allMeanTheta[,"z"],
xlab = "Generated Parameter",
ylab = "Estimated Parameter",
sub = paste("r =",cor_z),
main = "Z")
cor_v-0.5 = cor(allGenParams[,"v.-0.5"],allMeanTheta[,"v.-0.5"])
cor_vNeg = cor(allGenParams[,"v.-0.5"],allMeanTheta[,"v.-0.5"])
plot(allGenParams[,"v.-0.5"],allMeanTheta[,"v.-0.5"],
xlab = "Generated Parameter",
ylab = "Estimated Parameter",
sub = paste("r =",cor_vNeg),
main = "V.-0.5"))
plot(allGenParams[,"v.-0.5"],allMeanTheta[,"v.-0.5"],
xlab = "Generated Parameter",
ylab = "Estimated Parameter",
sub = paste("r =",cor_vNeg),
main = "V.-0.5")
cor_vPos = cor(allGenParams[,"v.0.5"],allMeanTheta[,"v.0.5"])
plot(allGenParams[,"v.0.5"],allMeanTheta[,"v.0.5"],
xlab = "Generated Parameter",
ylab = "Estimated Parameter",
sub = paste("r =",cor_vPos),
main = "V.0.5")
cor_a = cor(allGenParams[,"a"],allMeanTheta[,"a"])
cor_a
cor_t0 = cor(allGenParams[,"t0"],allMeanTheta[,"t0"])
cor_t0
all_cor = cbind(cor_z, cor_vNeg, cor_vPos, cor_a, cor_t0)
all_cor
plot(allGenParams[,"z"],allMeanTheta[,"z"],
xlab = "Generated Parameter",
ylab = "Estimated Parameter",
sub = paste("r =",cor_z),
main = "Z")
ggsave(file = "Plots/z.png")
plot(allGenParams[,"v.-0.5"],allMeanTheta[,"v.-0.5"],
xlab = "Generated Parameter",
ylab = "Estimated Parameter",
sub = paste("r =",cor_vNeg),
main = "V.-0.5")
png()
plot(allGenParams[,"v.-0.5"],allMeanTheta[,"v.-0.5"],
xlab = "Generated Parameter",
ylab = "Estimated Parameter",
sub = paste("r =",cor_vNeg),
main = "V.-0.5")
png("vNeg.png")
plot(allGenParams[,"v.-0.5"],allMeanTheta[,"v.-0.5"],
xlab = "Generated Parameter",
ylab = "Estimated Parameter",
sub = paste("r =",cor_vNeg),
main = "V.-0.5")
dev.off
View(allGenParams)
allGenParams$vDiff = allGenParams$v.0.5-allGenParams$v.-0.5
View(allGenParams)
allGenParams= as.data.frame(allGenParams)
allGenParams$vDiff = allGenParams$v.0.5-allGenParams$v.-0.5
mutate(allGenParams, vDiff = allGenParams$v.0.5 - allGenParams$v.-0.5)
View(allGenParams)
length(allGenParams$`v.-0.5`)
length(allGenParams$`v.0.5`)
allGenParams$v.0.5 - allGenParams$v.-0.5
allGenParams$vDiff = allGenParams$v.0.5 - allGenParams$v.-0.5
mutate(allGenParams, vDiff = allGenParams$`v.0.5` - allGenParams$`v.-0.5`)
allMeanTheta$vDiff = allMeanThetav.0.5 - allMeanTheta$v.-0.5
allMeanTheta$vDiff = allMeanTheta$v.0.5 - allMeanTheta$v.-0.5
allMeanTheta= as.data.frame(allMeanTheta)
allMeanTheta$vDiff = allMeanTheta$v.0.5 - allMeanTheta$v.-0.5
allMeanTheta$vDiff = allMeanTheta$v.0.5 - allMeanTheta$v.`-0.5`
allMeanTheta$vDiff = allMeanTheta$v.0.5 - allMeanTheta$`v.-0.5`
allGenParams$vDiff = allGenParams$v.0.5 - allGenParams$`v.-0.5`
cor_vDiff = cor(allGenParams[,"vDiff"],allMeanTheta[,"vDiff"])
plot(allGenParams[,"vDiff"],allMeanTheta[,"vDiff"],
xlab = "Generated Parameter",
ylab = "Estimated Parameter",
sub = paste("r =",cor_vDiff),
main = "vDiff")
#Load data
P = read_csv("Data/Gregory and Jackson (2020)/Study1RawData .csv")
setwd("~/Dropbox/2021/Gaze Cueing")
#Load data
P = read_csv("Data/Gregory and Jackson (2020)/Study1RawData .csv")
or now, I'm only interested in trials with a face cue, rather than a line or arrow
P = filter(P, CueType == "Face")
#Wrangle and rename variables into a format that Nathan's DDM script will recognise
P = cbind(ID = P$ParticipantID,
Validity = P$Validity,
Time = P$ReactionTime/1000,
Stim = P$CueDirection,
Resp = P$Accuracy + 1)
P = as.data.frame(P)
P$ID = as.numeric(P$ID)
P = mutate(P, Cond = case_when(Validity == "Valid" ~ 1,
Validity == "Invalid" ~ 2))
P$Time=as.numeric(P$Time)
P$Resp=as.numeric(P$Resp)
n = length(P$ID)
n = unique(P$ID)
n = max(P$ID)
for(i in n) {
PID = paste("P",i, sep ="")
data =  filter(P, ID == i)
assign(PID, x)
save(data, file = paste("Data/Gregory and Jackson (2020)/P",i,".Rdata",sep=""))
}
for(i in n) {
PID = paste("P",i, sep ="")
data =  filter(P, ID == i)
assign(PID, data)
save(data, file = paste("Data/Gregory and Jackson (2020)/P",i,".Rdata",sep=""))
}
for(i in 1:n) {
PID = paste("P",i, sep ="")
data =  filter(P, ID == i)
assign(PID, data)
save(data, file = paste("Data/Gregory and Jackson (2020)/P",i,".Rdata",sep=""))
}
source('~/Dropbox/2021/Gaze Cueing/Modelling/05_runDiffModel_V.R')
nSub = 1
source('~/Dropbox/2021/Gaze Cueing/Modelling/05_runDiffModel_Z.R')
source('~/Dropbox/2021/Gaze Cueing/Modelling/05_runDiffModel_complex.R')
source('~/Dropbox/2021/Gaze Cueing/Modelling/05_runDiffModel_V.R')
source('~/Dropbox/2021/Gaze Cueing/Modelling/05_runDiffModel_Z.R')
#Define how many data sets to use
n = 5
rm(list = ls())
#Define how many data sets to use
n = 5
#Complex model
for (p in 1:n) { #Loop in each data set
load(paste("Fits_Complex/P",n,"Complex_Model.RData", sep = ""))
AIC_C = rbind(AIC, AIC_C)
BIC_C = rbind(BIC, BIC_C)
}
#Complex model
for (p in 1:n) { #Loop in each data set
load(paste("Fits_Complex/P",n,"Complex_Model.RData", sep = ""))
AIC_C = rbind(AIC_C, AIC)
BIC_C = rbind(BIC_C, BIC)
}
AIC_C = NULL
BIC_C = NULL
#Define how many data sets to use
n = 5
#Complex model
for (p in 1:n) { #Loop in each data set
load(paste("Fits_Complex/P",n,"Complex_Model.RData", sep = ""))
AIC_C = rbind(AIC_C, AIC)
BIC_C = rbind(BIC_C, BIC)
}
View(AIC_C)
AIC_C = NULL
BIC_C = NULL
#Define how many data sets to use
n = 5
#Complex model
for (p in 1:n) { #Loop in each data set
load(paste("Fits_Complex/P",n,"Complex_Model.RData", sep = ""))
AIC_C = rbind(AIC, AIC_C)
BIC_C = rbind(BIC, BIC_C)
}
AIC_C
load("~/Dropbox/2021/Gaze Cueing/Fits_Complex/P1Complex_Model.Rdata")
load("~/Dropbox/2021/Gaze Cueing/Fits_Complex/P2Complex_Model.Rdata")
load("~/Dropbox/2021/Gaze Cueing/Fits_Complex/P5Complex_Model.Rdata")
load("~/Dropbox/2021/Gaze Cueing/Fits_Complex/P4Complex_Model.Rdata")
load("~/Dropbox/2021/Gaze Cueing/Fits_Complex/P3Complex_Model.Rdata")
AIC_C = NULL
BIC_C = NULL
#Define how many data sets to use
n = 5
#Complex model
for (p in 1:n) { #Loop in each data set
load(paste("Fits_Complex/P",p,"Complex_Model.RData", sep = ""))
AIC_C = rbind(AIC, AIC_C)
BIC_C = rbind(BIC, BIC_C)
}
AIC_C
BIC_C
rm(list = ls())
load("~/Dropbox/2021/Gaze Cueing/Recovery/All_Fits/Estimated_Paramaters.RData")
load("~/Dropbox/2021/Gaze Cueing/Recovery/All_Fits/Generated_Paramaters.RData")
res_vDiff = allGenParams[,"vDiff"] - allMeanTheta[,"vDiff"]
View(allGenParams)
setwd("~/Dropbox/2021/Gaze Cueing/Recovery")
allGenParams= as.data.frame(allGenParams)
allMeanTheta= as.data.frame(allMeanTheta)
allGenParams$vDiff = allGenParams$v.0.5 - allGenParams$`v.-0.5`
allMeanTheta$vDiff = allMeanTheta$v.0.5 - allMeanTheta$`v.-0.5`
res_vDiff = allGenParams[,"vDiff"] - allMeanTheta[,"vDiff"]
#Save the generated parameters
save(allGenParams, file = "All_Fits/Generated_Paramaters.RData")
save(allMeanTheta, file = "All_Fits/Estimated_Paramaters.RData")
res_z = allGenParams[,"v.0.5"] - allMeanTheta[,"v.0.5"]
cor_res = cor(res_vDiff, res_z)
plot(res_vDiff, res_z,
sub = paste("r =",cor_res),
main = "vDiff")
plot(res_vDiff, res_z,
sub = paste("r =",cor_res),
main = "Residuals")
