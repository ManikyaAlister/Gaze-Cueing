# We'll begin by loading up the libraries and data we need, as always.
knitr::opts_chunk$set(echo = TRUE)
# loading the libraries
library(tidyverse)
library(here)
library(ggplot2)
# ** you need to load the data using the here() function to define the loc
loc <- here("stolendata.csv")
d <- read_csv(file=loc)
d$year <- as.factor(d$year)
summary(d)
View(d)
d %>%
ggplot()+
geom_jitter(x = year,y = population)
View(d)
d %>%
ggplot()+
geom_jitter(aes(x = year,y = population))
d %>%
ggplot(aes(x = year,y = population))+
geom_violin()+
geom_jitter()
d %>%
ggplot(aes(x = year,y = population))+
geom_violin()+
geom_jitter(alpha(alpha = 0.5))
d %>%
ggplot(aes(x = year,y = population))+
geom_violin()+
geom_jitter(colour = "black", alpha(alpha = 0.5))
d %>%
ggplot(aes(x = year,y = population))+
geom_violin()+
geom_jitter(colour = "black", alpha(alpha = 0.5))
d %>%
ggplot(aes(x = year,y = population))+
geom_violin()+
geom_jitter(alpha(colour = "black",alpha = 0.5))
d %>%
ggplot(aes(x = year,y = population))+
geom_violin()+
geom_jitter(aes(alpha = 0.5))
d %>%
ggplot(aes(x = year,y = population))+
geom_violin()+
geom_jitter(aes(),alpha = 0.5))
d %>%
ggplot(aes(x = year,y = population))+
geom_violin()+
geom_jitter(aes(),alpha = 0.5)
d %>%
ggplot(aes(x = year,y = population))+
geom_violin()+
geom_jitter(alpha = 0.5)
d %>%
ggplot(aes(x = year,y = population))+
geom_violin()+
geom_jitter(alpha = 0.5, colour = "blue")
ds = d %>%
mutate(protein = (chicken+eggs+cows+pigs)/4,
veg = (wheat+corn+carrots+lettuce+potatoes+strawberries)/6)%>%
select(year,location,population,protein,veg,water)
ds = d %>%
mutate(protein = (chickens+eggs+cows+pigs)/4,
veg = (wheat+corn+carrots+lettuce+potatoes+strawberries)/6)%>%
select(year,location,population,protein,veg,water)
View(ds)
ds_pc = ds %>%
mutate(
proterinPC = protein/population,
vegPC = veg/population
) %>%
select(!veg,!protein,!water)
View(ds_pc)
ds_pc = ds %>%
mutate(
proterinPC = protein/population,
vegPC = veg/population
) %>%
select(-veg,-protein,-water)
View(ds_pc)
ds_pc = ds %>%
mutate(
proterinPC = protein/population,
vegPC = veg/population,
waterPC = water/population
) %>%
select(-veg,-protein,-water)
View(ds_pc)
dls_pc <- ds_pc %>%
pivot_longer(-c(year,population,location),names_to="food",
values_to="amount")
dls_pc
dls_pc %>%
ggplot(aes(x = year,y = amount), main = "Food Per Year")+
geom_point()+
xlab("Year")+
ylab("Amount")
dls_pc %>%
ggplot(aes(x = year,y = amount, colour = food), main = "Food Per Year")+
geom_point()+
xlab("Year")+
ylab("Amount")
dls_pc %>%
ggplot(aes(x = year,y = amount, colour = food))+
geom_point()+
scale_color_brewer(palette = 1)
dls_pc %>%
ggplot(aes(x = year,y = amount, colour = food))+
geom_point()+
scale_color_brewer(palette = 1)+
labs(
title = "Per capita food over time",
subtitle = "Amount of food per person looks like its going down",
x = "Year",
y = "Per capita food"
)
dls_pc %>%
ggplot(aes(x = year,y = amount, colour = food))+
geom_point()+
scale_color_brewer(palette = 2)+
labs(
title = "Per capita food over time",
subtitle = "Amount of food per person looks like its going down",
x = "Year",
y = "Per capita food"
)
dls_pc %>%
ggplot(aes(x = year,y = amount, colour = food))+
geom_point()+
scale_color_brewer(palette = 4)+
labs(
title = "Per capita food over time",
subtitle = "Amount of food per person looks like its going down",
x = "Year",
y = "Per capita food"
)
dls_pc %>%
ggplot(aes(x = year,y = amount, colour = food))+
geom_point(siz = 4, shape = 18)+
scale_color_brewer(palette = 4)+
labs(
title = "Per capita food over time",
subtitle = "Amount of food per person looks like its going down",
x = "Year",
y = "Per capita food"
)
dls_pc %>%
ggplot(aes(x = year,y = amount, colour = food))+
geom_point(siz = 4, shape = "18")+
scale_color_brewer(palette = 4)+
labs(
title = "Per capita food over time",
subtitle = "Amount of food per person looks like its going down",
x = "Year",
y = "Per capita food"
)
dls_pc %>%
ggplot(aes(x = year,y = amount, colour = food))+
geom_point(size = 4, shape = 18)+
scale_color_brewer(palette = 4)+
labs(
title = "Per capita food over time",
subtitle = "Amount of food per person looks like its going down",
x = "Year",
y = "Per capita food"
)
dl <- d %>%
pivot_longer(-c(year,population,location),names_to="food",
values_to="amount") %>%
mutate(pcAmount = amount/population)
dl
dl %>% ggplot(aes(x = year, y = food))+
geom_boxplot()+
facet_wrap(~food)
dl %>% ggplot(aes(x = year, y = food, fill = food))+
geom_boxplot()+
facet_wrap(~food)
dl %>% ggplot(aes(x = year, y = food, fill = food))+
geom_boxplot()+
facet_wrap(~food,scales = "free")
dl %>% ggplot(aes(x = year, y = amount, fill = food))+
geom_boxplot()+
facet_wrap(~food,scales = "free")
View(dl)
dl %>% ggplot(aes(x = year, y = PCamount, fill = food))+
geom_boxplot()+
facet_wrap(~food,scales = "free")
dl %>% ggplot(aes(x = year, y = pcAmount, fill = food))+
geom_boxplot()+
facet_wrap(~food,scales = "free")
knitr::opts_chunk$set(echo = TRUE)
library(aaltobda)
library(markmyassignment)
library(tidyverse)
alpha = rnorm(10000,0,2^2)
beta = rnorm(10000,10,10^2)
# means of alpha and beta
alpha_mean = mean(alpha)
beta_mean = mean(beta)
biv_mean = c(0,10)
names(biv_mean) = c("alpha","beta")
biv_mean
# Covariance of alpha and beta
# Bivariate covariance =
sd1 = 2^2
sd2 = 10^2
cor = 0.6
bivCov = matrix(data = c((2^2)^2,0.6*(4*10),0.6*(10*4),(10^2)^2),2,2) # unsure if 2^2 and 10^2 means that
# what's shown is the variance not the SD
data("bioassay_posterior")
data = bioassay_posterior
MCSE = function(theta) {
sqrt(var(theta)/length(theta))
}
MCSE_alpha = MCSE(data$alpha)
names(MCSE_alpha) = "MCSE alpha"
MCSE_alpha
mean_alpha = round(mean(data$alpha),2)
names(mean_alpha) = "alpha mean"
CI_alpha = quantile(data$alpha, c(0.025,0.975))
round(c(mean_alpha,CI_alpha),1) # Round to 1 decimal place because there is 1 non-zero MCSE
# decimal.
MCSE_beta = MCSE(data$beta)
names(MCSE_beta) = "MCSE Beta"
MCSE_beta
mean_beta = mean(data$beta)
names(mean_beta) = "beta mean"
CI_beta = quantile(data$beta, c(0.025,0.975))
round(c(mean_beta,CI_beta),1)
data("bioassay")
d = bioassay
S = length(alpha)
bioassaylp(alpha,beta,bioassay$x,bioassay$y,bioassay$n)
bioassaylp(alpha,beta,bioassay$x,bioassay$y,bioassay$n)
ns = 10000
theta =cbind(seq(-3,30,length.out = ns),seq(15,30,length.out = ns))
d
alpha <- c(1.896, -3.6,  0.374, 0.964, -3.123, -1.581)
beta <- c(24.76, 20.04, 6.15, 18.65, 8.16, 17.4)
ns = 10000
gX = dmvnorm(x = thetaAb,mean = c(0,10),sigma = bivCov) # proposal <-- Prior!
weights = #?
thetaAb = cbind(alpha,beta)
gX = dmvnorm(x = thetaAb,mean = c(0,10),sigma = bivCov) # proposal <-- Prior!
gX
?dmultinom()
weights = #?
gTheta = rmvnorm(6,mean = c(0,10),sigma = bivCov)
gTheta
?dexp
bioassaylp(d)
bioassaylp(d$x)
bioassaylp(alpha = alpha,beta = beta, x = d$x, y= d$y, n = d$n)
#importance sampling
m = 10000 #iterations
X = rmvnorm(m,mean = c(0,10),sigma = bivCov)
weights = c()
mu = c()
X
for(i in 1:m){
weights[i] = dmvnorm(X[i])/dmvnorm(X[i],mean = c(0,10),sigma = bivCov))
for(i in 1:m){
weights[i] = dmvnorm(X[i])/dmvnorm(X[i],mean = c(0,10),sigma = bivCov)
mu[i] = weights[i]*exp((-1*(X[i]))+cos(X[i]))
}
X
for(i in 1:m){
weights[i] = dmvnorm(X[i],c(mean(X[,1],meanX[,2]),cov(X)))/dmvnorm(X[i],mean = c(0,10),sigma = bivCov)
mu[i] = weights[i]*exp((-1*(X[i]))+cos(X[i]))
}
for(i in 1:m){
weights[i] = dmvnorm(X[i],c(mean(X[,1]),mean(X[,2])),cov(X))/dmvnorm(X[i],mean = c(0,10),sigma = bivCov)
mu[i] = weights[i]*exp((-1*(X[i]))+cos(X[i]))
}
for(i in 1:m){
weights[i] = dmvnorm(X[i],c(mean(X[i,1]),mean(X[i,2])),cov(X))/dmvnorm(X[i],mean = c(0,10),sigma = bivCov)
mu[i] = weights[i]*exp((-1*(X[i]))+cos(X[i]))
}
?bioassaylp()
for(i in 1:m){
weights[i] = bioassaylp(alpha,beta,bioassay$x,bioassay$y,bioassay$n)/dmvnorm(X[i],mean = c(0,10),sigma = bivCov)
mu[i] = weights[i]*exp((-1*(X[i]))+cos(X[i]))
}
dmvnorm(X[i],mean = c(0,10),sigma = bivCov)
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/t0-unconstrained/dataset2/06.Hier_quantiles.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/t0-unconstrained/dataset2/09_Hier-param-density.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset1a/05_Simulate.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset1a/06.Hier_quantiles.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset1a/06.Hier_quantiles.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset1a/09_Hier-param-density.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset1b/05_Simulate.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset1b/06.Hier_quantiles.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset1b/09_Hier-param-density.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset2/05_Simulate.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset2/06.Hier_quantiles.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset2/06.Hier_quantiles.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset1a/06.Hier_quantiles.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset2/09_Hier-param-density.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset3/05_Simulate.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset3/06.Hier_quantiles.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset1a/05_Simulate.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/z-unconstrained/dataset1a/06.Hier_quantiles.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/z-unconstrained/dataset1a/06.Hier_quantiles.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/z-unconstrained/dataset1a/06.Hier_quantiles.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset3/06.Hier_quantiles.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset1a/05_Simulate.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset3/06.Hier_quantiles.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/z-unconstrained/dataset1a/05_Simulate.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/z-unconstrained/dataset1b/05_Simulate.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/z-unconstrained/dataset1b/06.Hier_quantiles.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/z-unconstrained/dataset1b/09_Hier-param-density.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/z-unconstrained/dataset2/05_Simulate.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/z-unconstrained/dataset2/06.Hier_quantiles.R")
rm(list = ls())
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/z-unconstrained/dataset2/06.Hier_quantiles.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/z-unconstrained/dataset2/09_Hier-param-density.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/z-unconstrained/dataset3/05_Simulate.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/z-unconstrained/dataset3/06.Hier_quantiles.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset3/05_Simulate.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset3/06.Hier_quantiles.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset3/09_Hier-param-density.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset3/09_Hier-param-density.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset3/09_Hier-param-density.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset3/09_Hier-param-density.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset3/09_Hier-param-density.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/v-unconstrained/dataset3/09_Hier-param-density.R")
source("~/cloudstor/Gaze-Cueing/Hierarchical-Modelling/t0-unconstrained/dataset2/06.Hier_quantiles.R")
