data = expand_grid(x) %>%
mutate(log2 = (log(x-1, 2)),
log4 = (log(x-1, 4)),
log6 = (log(x-1, 6)),
log8 = (log(x-1, 8)),
log = (log(x-1, 10)))
ggplot(data = data) +
geom_line(aes(x, log2))
ggplot(data = data) +
geom_line(aes(x, log2))+
geom_line(aes(x, log4))+
geom_line(aes(x, log6))+
geom_line(aes(x, log8))+
geom_line(aes(x, log))
rm(lists = ls())
rm(list = ls())
if (file.exists(".RData")) file.remove(".RData")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
load("/Users/manikya_alister/Nextcloud/MGPMCOGLD-Q1797/Experiment/Experiment 2 Analysis/2_Model_fit/post/exp_2_analysis/4.5_comparison_output/waic_comparison.RData")
load("~/Nextcloud/MGPMCOGLD-Q1797/Experiment/Experiment 2 Analysis/2_Model_fit/post/exp_2_analysis/4.5_comparison_output/loo_comparison.RData")
loo_comp
waic_comp
View(waic_comp)
load("/Users/manikya_alister/Nextcloud/MGPMCOGLD-Q1797/Experiment/Experiment 2 Analysis/2_Model_fit/Final outputs/waic_comparison.RData")
View(waic_comp)
load("~/Nextcloud/MGPMCOGLD-Q1797/Experiment/Experiment 1 Analysis/Niky Analyses/Experiment 1/Behavioural Analyses/output_E1.RData")
View(output)
output
git --version
libreary(tidyverse)
library(tidyverse)
load("~/Nextcloud/REPLICA-Q1024/data/clean/clean_data.RData")
?summarise
quant_prereg = filter(clean_data, fieldassosciate, preeregistered)
?filter
quant_prereg = group_by(clean_data, fieldassosciate, preeregistered)
quant_prereg = group_by(clean_data, fieldassociate, preeregistered)
quant_prereg = group_by(clean_data, fieldassociate)
quant_prereg = group_by(clean_data, fieldassociate, preregistered)
View(quant_prereg)
quant_prereg = filter(clean_data, fieldassociate, preregistered)
quant_prereg = filter(clean_data$fieldassociate = "Quantatative")
quant_prereg = filter(clean_data$fieldassociate == "Quantatative")
quant_prereg = filter(as.character(clean_data$fieldassociate == "Quantatative"))
summarise(clean_data, fieldassociate)
quant_prereg = summarise(clean_data, fieldassociate)
View(quant_prereg)
filter(clean_data, fiield_associate)
filter(clean_data, field_associate)
filter(clean_data, preregistered)
filter(clean_data, field_associate == quantitative)
filter(clean_data, fiel_associate == quantitative)
quant_prereg = filter(clean_data, fieldassociate == "Quantitative")
View(quant_prereg)
quant_prereg = filter(clean_data, fieldassociate == "Quantitative" & fieldassociate == "Cognitive")
quant_prereg = filter(clean_data, fieldassociate == "Quantitative" | fieldassociate == "Cognitive")
View(quant_prereg)
quant_prereg = filter(clean_data, fieldassociate == "Quantitative")
quant_prereg = filter(clean_data, fieldassociate == "Quantitative") %>%
mean(preregistered)
mean(quant_prereg$preregistered)
quant_prereg = filter(clean_data, fieldassociate == "Quantitative")$>$
summarise(quant_prereg, prerigestered)
quant_prereg = filter(clean_data, fieldassociate == "Quantitative")$>$
select(preregistered) %>%
mean()
quant_prereg = filter(clean_data, fieldassociate == "Quantitative")$>$
select(preregistered)
quant_prereg = filter(clean_data, fieldassociate == "Quantitative")$>$
select(quant_prereg, preregistered)
?select
select
select(quant_prereg, preregistered)
quant_prereg = filter(clean_data, fieldassociate == "Quantitative")
select(quant_prereg, preregistered)
quant_prereg = filter(clean_data, fieldassociate == "Quantitative") %>%
select(quant_prereg, preregistered)
View(quant_prereg)
quant_prereg = select(quant_prereg, preregistered)
mean(quant_prereg)
quant_prereg = select(quant_prereg, preregistered)
View(quant_prereg)
mean(as.numeric(quant_prereg))
summary(as.numeric(quant_prereg))
mean(quant_prereg)
is.numeric(quant_prereg)
as.numeric(quant_prereg)
mean(quant_prereg, na.rm = T)
mean(as.numeric(quant_prereg, na.rm = T))
mean(as.numeric(quant_prereg$preregistered, na.rm = T))
mean(select(clean_data, preregistered))
mean(clean_data$preregistered)
QuantCog_prereg = filter(clean_data, fieldassociate == "Quantitative" | fieldassociate == "Cognitive")
mean(QuantCog_prereg$preregistered)
by_subd = group_by(fieldassociate)
by_subd = group_by(clean_data, fieldassociate)
View(clean_data)
x = 0
rm(list = ls())
x = 0
#Loops Example
x = 0
while(x < 1000) {
x = x + 179
}
print(x)
x = 500
x = 500
while (x > 0) {
x = x - 20
}
print(x)
x = 500
while (x > 0) {
x = x - 20
}
seq(500:1, -20)
seq(500, 20, -20)
x = x - 20
print(x)
seq = for (x in 0:500) {
x = x - 20
}
x = 500
for (x in 0:500) {
x = x - 20
}
print(x)
print(answer)}
while (x > 0) {
x = x - 20
print(answer)
}
print(answer)}
for (value in 0:500) {
x = value - 20
print(answer)}
library(tidyverse)
for (value in 0:500) {
x = value - 20
print(answer)}
x = 500
print(x)}
while (x > 0) {
x = x - 20
}
print(x)
x = 500
while (x > 0) print(x) {
x = x - 20
}
print(x)
while (x > 0) {
print(x)
x = x - 20
}
#For loop example
for ( value in 1:10 ) {
answer <- 137*value
print(answer)
}
words <- c(“farewell”,”cruel”,”world”)
words <- c(“farewell”,”cruel”,”world”)
words <- c(“farewell”,”cruel”,”world”)
words = c(“farewell”,”cruel”,”world”)
words = c("farewell","cruel","world")
for (thisWord in words) {
nLetters <- nchar(thisWord)
blockWord <- toupper(thisWord)
cat(blockWord,”has”,nLetters,”letters\n”)
}
for (thisWord in words) {
nLetters <- nchar(thisWord)
blockWord <- toupper(thisWord)
cat(blockWord,"has",nLetters,"letters\n")
}
##
x = x - 20
for x in 0:500 {
print(x)
x = x - 20
}
print(x)
## Excersise
x = 500
for x in 0:500 {
x = x - 20
print(x)
}
for x in 0:500 {
x = x - 20
print(x)
}
x = x - 20
for x in 0:500 {
print(x)
x = x - 20
}
for x in 500:0 {
print(x)
x = x - 20
}
for x in 500:0 {
answer = x - 20
print(answer)
}
for x in 500:0 {
answer = x - 20
print(answer)
}
for (x in 0:500) {
answer = x - 20
print(answer)
}
for (x in 0:10) {
answer = x - 20
print(answer)
}
answer = value - 20
for (value in 0:500) {
answer = value - 20
print(answer)
}
x = 500
while (x > 0) {
print(x)
x = x - 20
}
for (value in 0:500) {
x = x - 20
print(x)
}
## Excersise
x = 500
for (value in 0:500) {
x = x - 20
print(x)
}
for (x in 0:500) {
x = x - 20
print(x)
}
answer = x - 20
for (x in 0:500) {
answer = x - 20
print(answer)
}
## Excersise
x = 500
for (x in 0:500) {
answer = x - 20
print(answer)
}
print(x)
for (x in >-1 {
for (x in 0:500 {
for (x in 0:500) {
x = x - 20
print(x)
}
for (x in 0:500) {
print(x)
x = x - 20
}
for (value in 0:500) {
x = x - 20
print(x)
}
print(y)
for (x in 0:500) {
y = x - 20
print(y)
}
mi_familia = c(Mum, Dad, Tappy)
mi_familia = c("Mum", "Dad", "Tappy")
age = c("60", "65", "19")
#2
?touper
?toupper
?cat
cat(mi_familia, "his", age)
cat(mi_familia, "is", age, "years old")
blockWord = toupper(mi_familia)
cat(mi_familia, "is", age, "years old")
for (thisWord in mi_familia) {
age = age
blockWord = toupper(mi_familia)
cat(mi_familia, "is", age, "years old")
}
blockWord = toupper(thisWord)
for (thisWord in mi_familia) {
age = age
blockWord = toupper(thisWord)
cat(mi_familia, "is", age, "years old")
}
age = sum(thisWord)
for (thisWord in mi_familia) {
age = sum(thisWord)
blockWord = toupper(thisWord)
cat(mi_familia, "is", age, "years old")
}
for (thisWord in mi_familia) {
age = value(thisWord)
blockWord = toupper(thisWord)
cat(mi_familia, "is", age, "years old")
}
for (thisWord in mi_familia) {
age_print = print(thisWord)
blockWord = toupper(thisWord)
cat(mi_familia, "is", age, "years old")
}
age = c(60, 65, 19)
for (thisWord in mi_familia) {
age_print = (thisWord)
blockWord = toupper(thisWord)
cat(mi_familia, "is", age, "years old")
}
age_print = sum(thisWord)
age = c(60, 65, 19)
for (thisWord in mi_familia) {
blockWord = toupper(thisWord)
cat(mi_familia, "is", age, "years old")
}
family = cbind(mi_familia, age)
family = cbind(mi_familia, age)
View(family)
for (thisWord in family) {
cat(mi_familia, "is", age, "years old")
}
for (thisWord in mi_familia) {
cat(mi_familia, "is", age, "years old")
}
blockWord <- toupper(thisWord)
for (thisWord in words) {
nLetters <- nchar(thisWord)
blockWord <- toupper(thisWord)
cat(blockWord,"has",nLetters,"letters\n")
}
age_ = value(age)
age_ = sum(age)
blockWord = toupper(thisWord)
for (thisWord in mi_familia) {
blockWord = toupper(thisWord)
cat(mi_familia, "is", age, "years old")
}
for (thisWord in mi_familia) {
cat(mi_familia, "is", age, "years old")
}
for (thisWord in family) {
cat(mi_familia, "is", age, "years old")
}
for (thisWord in mi_familia) {
print(mi_familia, "is", age, "years old")
}
?toupper
for (x in 0:500) {
y = x - 20
print(y)
}
for (x in x > 0) {
y = x - 20
print(y)
}
#1
x = 500
for (x in x > 0) {
y = x - 20
print(y)
}
for (x in x 0 : 10) {
y = x - 2
print(y)
}
for (x in x 0:10) {
y = x - 2
print(y)
}
#1
x = 10
for (x in x 0:10) {
y = x - 2
print(y)
}
for (x in 0:10) {
y = x - 2
print(y)
}
#1
x = seq(500, 0, -20)
for (x in 0:500) {
y =  x - 20
print(y)
}
#1
x = seq(500, 0, -20)
for (x in 0:500) {
y =  x - 20
print(y)
}
for (x in seq(0, 500, 20)) {
y =  x - 20
print(y)
}
for (x in seq(20, 500, 20)) {
y =  x - 20
print(y)
}
for (value in seq(20, 500, 20)) {
y =  x - 20
print(y)
}
#1
x = 500
for (x in seq(20, 500, 20)) {
y =  x - 20
print(y)
}
for (x in seq(20, 520, 20)) {
y =  x - 20
print(y)
}
rm(list=ls())
install.packages("blogdown")
install.packages("blogdown")
library(blogdown)
remotes::install_github("lindeloev/job")
library(job)
source('~/Dropbox/2021/Gaze-Cueing/Modelling/05_runDiffModel_Zfacil.R')
source('~/Dropbox/2021/Gaze-Cueing/Modelling/05_runDiffModel_Zfacil.R')
source('~/Dropbox/2021/Gaze-Cueing/Modelling/05_runDiffModel_Zfacil.R')
debugSource('~/Dropbox/2021/Gaze-Cueing/Modelling/05_runDiffModel_Zfacil.R')
setwd("~/Dropbox/2021/Gaze-Cueing/Recovery_zinter")
source('~/Dropbox/2021/Gaze-Cueing/Recovery_zinter/01_sim_1.R')
source('~/Dropbox/2021/Gaze-Cueing/Recovery_zinter/01_sim_1.R')
source('~/Dropbox/2021/Gaze-Cueing/Recovery_zinter/01_sim_1.R')
source('~/Dropbox/2021/Gaze-Cueing/Recovery_zinter/02_simulate-DIFF.R')
source('~/Dropbox/2021/Gaze-Cueing/Recovery_zinter/06_runDiffModel_complex_recovery.R')
source('~/Dropbox/2021/Gaze-Cueing/Recovery_zinter/06_runDiffModel_complex_recovery.R')
source('~/Dropbox/2021/Gaze-Cueing/Recovery_zinter/06_runDiffModel_complex_recovery.R')
source('~/Dropbox/2021/Gaze-Cueing/Recovery_zinter/06_runDiffModel_complex_recovery.R')
source('~/Dropbox/2021/Gaze-Cueing/Recovery_zinter/06_runDiffModel_complex_recovery.R')
source('~/Dropbox/2021/Gaze-Cueing/Recovery_zinter/06_runDiffModel_complex_recovery.R')
setwd("~/Dropbox/2021/Gaze Cueing/Recovery_zinter")
setwd("~/Dropbox/2021/Gaze-Cueing/Recovery_zinter")
allGenParams=NULL
allMeanTheta=NULL
#Define how many data sets to use
n = 100
for (p in 1:n) { #Loop in each data set
load(paste("Fits_recovery/zinter_fits_recovery_P",p,".RData", sep = ""))
#Rearrange and take out unnecessary values from the generated parameters
tmp = c(genParams[2,2], genParams[3,2], genParams[4,1], genParams[4,2], genParams[1,2])
names(tmp) = c("a", "t0", "v.-0.5", "v.0.5", "z")
#Create a large data set which combines the mean generated parameters from all data sets
allGenParams=rbind(allGenParams,tmp)
#Create a large data set which combines the mean estimated parameters from all data sets
allMeanTheta=rbind(allMeanTheta,apply(theta,2,mean))
}
allGenParams= as.data.frame(allGenParams)
allMeanTheta= as.data.frame(allMeanTheta)
allGenParams$vDiff = allGenParams$v.0.5 - allGenParams$`v.-0.5`
allMeanTheta$vDiff = allMeanTheta$v.0.5 - allMeanTheta$`v.-0.5`
#Save the generated parameters
save(allGenParams, file = "All_Fits/zinter_Generated_Paramaters.RData")
save(allMeanTheta, file = "All_Fits/zinter_Estimated_Paramaters.RData")
#If I want to reload
load("~/Dropbox/2021/Gaze Cueing/Recovery/All_Fits/Estimated_Paramaters.RData")
load("~/Dropbox/2021/Gaze Cueing/Recovery/All_Fits/Generated_Paramaters.RData")
#If I want to reload
load("~/Dropbox/2021/Gaze-Cueing/Recovery/All_Fits/zinter_Estimated_Paramaters.RData")
plot(allGenParams[,"z"],allMeanTheta[,"z"],
xlab = "Generated Parameter",
ylab = "Estimated Parameter",
sub = paste("r =",cor_z),
main = "Z")
cor_zinter = cor(allGenParams[,"z"], allMeanTheta["z"])
plot(allGenParams[,"z"],allMeanTheta[,"z"],
xlab = "Generated Parameter",
ylab = "Estimated Parameter",
sub = paste("r =",cor_zinter),
main = "zInter")
cor_vNeg = cor(allGenParams[,"v.-0.5"],allMeanTheta[,"v.-0.5"])
plot(allGenParams[,"v.-0.5"],allMeanTheta[,"v.-0.5"],
xlab = "Generated Parameter",
ylab = "Estimated Parameter",
sub = paste("r =",cor_vNeg),
main = "V.-0.5")
cor_vPos = cor(allGenParams[,"v.0.5"],allMeanTheta[,"v.0.5"])
plot(allGenParams[,"v.0.5"],allMeanTheta[,"v.0.5"],
xlab = "Generated Parameter",
ylab = "Estimated Parameter",
sub = paste("r =",cor_vPos),
main = "V.0.5")
cor_vDiff = cor(allGenParams[,"vDiff"],allMeanTheta[,"vDiff"])
plot(allGenParams[,"vDiff"],allMeanTheta[,"vDiff"],
xlab = "Generated Parameter",
ylab = "Estimated Parameter",
sub = paste("r =",cor_vDiff),
main = "vDiff")
res_vDiff = allGenParams[,"vDiff"] - allMeanTheta[,"vDiff"]
res_z = allGenParams[,"v.0.5"] - allMeanTheta[,"v.0.5"]
res_vDiff = allGenParams[,"vDiff"] - allMeanTheta[,"vDiff"]
res_z = allGenParams[,"v.0.5"] - allMeanTheta[,"v.0.5"]
cor_res = cor(res_vDiff, res_z)
plot(res_vDiff, res_z,
sub = paste("r =",cor_res),
main = "Residuals")
cor_a = cor(allGenParams[,"a"],allMeanTheta[,"a"])
cor_t0 = cor(allGenParams[,"t0"],allMeanTheta[,"t0"])
all_cor = cbind(cor_z, cor_vNeg, cor_vPos, cor_a, cor_t0)
all_cor = cbind(cor_zinter, cor_vNeg, cor_vPos, cor_a, cor_t0)
all_cor
